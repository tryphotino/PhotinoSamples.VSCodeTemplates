{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACFnE,sDAAsD;AACtD,4DAA4D;AAC5D,2DAA2D;AAC3D,IAAI,OAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,UAAU,EAAE;IACpD,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,CAAC,OAAe,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,wCAAwC,GAAG,OAAO,CAAC,CAAC;CACtH;AAED,IAAI,OAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,UAAU,EAAE;IACvD,MAAM,CAAC,QAAQ,CAAC,cAAc,GAAG,CAAC,QAAmC,EAAE,EAAE;QACrE,IAAI,OAAO,GAAG,kCAAkC,CAAC;QACjD,QAAQ,CAAC,OAAO,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,+CAA+C,GAAG,OAAO,CAAC,CAAC,CAAC;CAC/H;KAAM;IACH,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,OAAe,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;CACvE;AAQM,MAAM,YAAY;IANzB;QAOI,UAAK,GAAG,IAAI,CAAC;QAEb,eAAU,GAAG,GAAG,EAAE;YACd,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC/C,CAAC;KACJ;;wEANY,YAAY;4FAAZ,YAAY;QCrCzB,oEAAuE;QAEvE,wEAAwB;QAAA,+EAAoB;QAAA,4DAAK;QAEjD,uEAAuB;QACnB,uQACJ;QAAA,4DAAI;QACJ,4EAAsD;QAAvB,oIAAS,gBAAY,IAAC;QAAC,oEAAS;QAAA,4DAAS;;;;;;;;;;;;;;ACNxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;;AAaxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n// Declare the necessary interface for messaging functions\r\n// in the PhotinoWindow application.\r\ndeclare global {\r\n    interface External {\r\n        sendMessage: (message: string) => void;\r\n        receiveMessage: (delegate: (message: string) => void) => void;\r\n    }\r\n\r\n    interface Window { External: object; }\r\n}\r\n\r\n// Make sure that sendMessage and receiveMessage exist\r\n// when the frontend is started without the Photino context.\r\n// I.e. using Vue's `npm run serve` command and hot reload.\r\nif (typeof(window.external.sendMessage) !== 'function') {\r\n    window.external.sendMessage = (message: string) => console.log(\"Emulating sendMessage.\\nMessage sent: \" + message);\r\n}\r\n\r\nif (typeof(window.external.receiveMessage) !== 'function') {\r\n    window.external.receiveMessage = (delegate: (message: string) => void) => {\r\n        let message = 'Simulating message from backend.';\r\n        delegate(message);\r\n    };\r\n\r\n    window.external.receiveMessage((message: string) => console.log(\"Emulating receiveMessage.\\nMessage received: \" + message));\r\n} else {\r\n    window.external.receiveMessage((message: string) => alert(message));\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n    \r\nexport class AppComponent {\r\n    title = 'ui';\r\n    \r\n    callDotNet = () => {\r\n        window.external.sendMessage('Hi .NET! ðŸ¤–');\r\n    }\r\n}\r\n","<img src=\"assets/photino-logo.svg\" alt=\"Photino\" class=\"logo center\" />\r\n\r\n<h1 class=\"text-center\">Hello to Photino for .NET</h1>\r\n\r\n<p class=\"text-center\">\r\n    This is an Angular static HTML file with CSS and JavaScript, served from a local web root. Click on the button below to send a message to the backend. It will respond and send a message back to the UI.\r\n</p>\r\n<button class=\"primary center\" (click)=\"callDotNet()\">Call .NET</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}