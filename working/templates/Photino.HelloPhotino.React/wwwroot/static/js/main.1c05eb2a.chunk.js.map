{"version":3,"sources":["photino-logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","window","external","sendMessage","message","console","log","receiveMessage","delegate","alert","className","src","photinoLogo","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIAAe,G,KAAA,IAA0B,0C,cCyC1BA,MAtCf,WAuBI,MAnB4C,oBAAjCC,OAAOC,SAASC,cACvBF,OAAOC,SAASC,YAAc,SAACC,GAAD,OAAaC,QAAQC,IAAI,yCAA2CF,KAGvD,oBAApCH,OAAOC,SAASK,gBACvBN,OAAOC,SAASK,eAAiB,SAACC,GAE9BA,EADc,qCAIlBP,OAAOC,SAASK,gBAAe,SAACH,GAAD,OAAaC,QAAQC,IAAI,gDAAkDF,OAE1GH,OAAOC,SAASK,gBAAe,SAACH,GAAD,OAAaK,MAAML,MAQlD,sBAAKM,UAAU,MAAf,UACI,qBAAKC,IAAKC,EAAaC,IAAI,UAAUH,UAAU,gBAE/C,oBAAIA,UAAU,cAAd,oCAEA,mBAAGA,UAAU,cAAb,8KAIA,wBAAQA,UAAU,iBAAiBI,QAd3C,WACIb,OAAOC,SAASC,YAAY,0BAaxB,2BCxBGY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1c05eb2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/photino-logo.bdbdf3b1.svg\";","import photinoLogo from './photino-logo.svg';\nimport './App.css';\n\nfunction App() {\n    // Make sure that sendMessage and receiveMessage exist\n    // when the frontend is started without the Photino context.\n    // I.e. using React's `npm run start` command and hot reload.\n    if (typeof(window.external.sendMessage) !== 'function') {\n        window.external.sendMessage = (message) => console.log(\"Emulating sendMessage.\\nMessage sent: \" + message);\n    }\n\n    if (typeof(window.external.receiveMessage) !== 'function') {\n        window.external.receiveMessage = (delegate) => {\n            let message = 'Simulating message from backend.';\n            delegate(message);\n        };\n\n        window.external.receiveMessage((message) => console.log(\"Emulating receiveMessage.\\nMessage received: \" + message));\n    } else {\n        window.external.receiveMessage((message) => alert(message));\n    }\n\n    function callDotNet() {\n        window.external.sendMessage('Hi .NET! ðŸ¤–');\n    }\n    \n    return (\n        <div className=\"App\">\n            <img src={photinoLogo} alt=\"Photino\" className=\"logo center\" />\n\n            <h1 className=\"text-center\">Hello to Photino.React</h1>\n        \n            <p className=\"text-center\">\n                This is a React App served from a local web root. Click on the button below to send a message to the backend. It will respond and send a message back to the UI.\n            </p>\n\n            <button className=\"primary center\" onClick={callDotNet}>Call .NET</button>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}